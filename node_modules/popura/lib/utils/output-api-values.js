'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
/**
 * Factory function that returns a XML generator function
 * It's useful to merge the common values with the anime/manga
 * specific values
 *
 * @param  {array} fields = [] - List of allowed fields to output
 * @return {function} - Function that outputs XML values
 */
function outputValuesFactory() {
	var fields = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

	/**
  * Concatenate with common fields
  */
	var fieldsToOutput = fields.concat(['status', 'score', 'date_start', 'date_finish', 'priority', 'enable_discussion', 'comments', 'tags']);

	/**
  * Takes an object and render only the keys inside our fieldsToGenerate
  * const inside this closure
  *
  * @param  {object} values - Key-Value pair of fields allowed from MAL API
  * @return {string} - XML ready to post in the API
  */
	return function (values) {
		var outputFields = Object.keys(values).filter(function (key) {
			return fieldsToOutput.indexOf(key) !== -1;
		}).map(function (key) {
			return '<' + key + '>' + values[key] + '</' + key + '>';
		}).join('');
		return '<?xml version="1.0" encoding="UTF-8"?><entry>' + outputFields + '</entry>';
	};
}

var outputAnimeValues = exports.outputAnimeValues = outputValuesFactory(['episode', 'storage_type', 'storage_value', 'times_rewatched', 'rewatch_value', 'enable_rewatching', 'fansub_group']);

var outputMangaValues = exports.outputMangaValues = outputValuesFactory(['chapter', 'volume', 'times_reread', 'reread_value', 'enable_rereading', 'scan_group', 'retail_volumes']);