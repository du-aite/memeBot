'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = authenticable;

var _generateAuthToken = require('../utils/generate-auth-token');

var _generateAuthToken2 = _interopRequireDefault(_generateAuthToken);

var _request = require('../utils/request');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = require('debug')('popura:authenticable');

/**
 * Composes an authenticable object
 *
 * @param  {object} state
 * @return {object} - An object that can authenticate to MAL
 */
function authenticable(state) {
	state.authToken = (0, _generateAuthToken2.default)(state.username, state.password);
	return {
		/**
   * Return the current user's username
   *
   * @return {string}
   */

		getUser: function getUser() {
			return state.username;
		},


		/**
   * Change the current user in this client instance
   *
   * @param  {string} username
   * @param  {string} password
   * @return {this}
   */
		setUser: function setUser(username, password) {
			debug('Setting \'' + username + '\' as user. Use pass = ' + Boolean(password));
			state.username = username;
			state.password = password;
			state.authToken = (0, _generateAuthToken2.default)(username, password);

			return this;
		},


		/**
   * Check if this user is valid
   *
   * @return {Promise} - Resolve to this user's username and ID
   * or throws.
   */
		verifyCredentials: function verifyCredentials() {
			debug('Verifying credentials for \'' + state.username + '\'');
			return (0, _request.requestApi)(state.authToken, '/account/verify_credentials.xml');
		}
	};
}
module.exports = exports['default'];